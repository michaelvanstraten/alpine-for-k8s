# vim: set filetype=hocon:

project  = "https://github.com/michaelvanstraten/alpine-for-k8s"
userhost = "tomalok@dev.alpinelinux.org"

# all build configs start with these
Default {
  project = ${project}

  # image name/description components
  name        = [ "{cloud}_alpine-k8s" ]
  description = [ Alpine Linux for Kubernetes ]

  motd {
    welcome = "Welcome to Alpine Linux for Kubernetes!"

    wiki = [
      "The Alpine Wiki contains a large amount of how-to guides and general"
      "information about administrating Alpine systems."
      "See <https://wiki.alpinelinux.org>."
    ]

    release_notes = [
      "Alpine release notes:"
      "* <{release_notes}>"
    ]
  }

  # initial provisioning scripts and data directory
  scripts     = [ setup ]
  script_dirs = [ setup.d ]

  size  = 2G
  login = alpine

  repos = {
    "http://dl-cdn.alpinelinux.org/alpine/edge/main"        = true
    "http://dl-cdn.alpinelinux.org/alpine/edge/community"   = true
    "http://dl-cdn.alpinelinux.org/alpine/edge/testing"     = true
  }

  services = {
    default = {
      kubelet = true
    }
  }

  kernel_modules = {
    ipv6 = true
  }

  image_format  = qcow2

  # storage_url contents are authoritative!
  storage_url   = "ssh://"${userhost}"/public_html/alpine-cloud-images/{v_version}/{cloud}/{arch}"
  # released images are available here
  # download_url  = "https://dl-cdn.alpinelinux.org/alpine/{v_version}/releases/cloud"
  signing_cmd = "keybase pgp sign -d -i {file} -o {file}.asc"
  # release_cmd = ssh ${userhost} "bin/release-image {v_version} {cloud} {arch} {base}"

  # image access
  access.PUBLIC = true

  # image publication
  regions.ALL = true

}

# profile build matrix
Dimensions {
  version {
    "3.19"  { include required("version/3.19.conf") }
    "3.18"  { include required("version/3.18.conf") }
    "3.17"  { include required("version/3.17.conf") }
    "3.16"  { include required("version/3.16.conf") }
    edge    { include required("version/edge.conf") }
  }
  arch {
    x86_64  { include required("arch/x86_64.conf") }
    aarch64 { include required("arch/aarch64.conf") }
  }
  firmware {
    bios { include required("firmware/bios.conf") }
    uefi { include required("firmware/uefi.conf") }
  }
  bootstrap {
    tiny      { include required("bootstrap/tiny.conf") }
    cloudinit { include required("bootstrap/cloudinit.conf") }
  }
  cloud {
    aws     { include required("cloud/aws.conf") }
    # considered beta...
    nocloud { include required("cloud/nocloud.conf") }
    # considered alpha...
    azure   { include required("cloud/azure.conf") }
    gcp     { include required("cloud/gcp.conf") }
    oci     { include required("cloud/oci.conf") }
  }
  nodetype {
    kmaster = { name = [kmaster] }
    kworker = { name = [kworker] }
  }
  k8s-version = {
    "1.29" { include required("k8s-version/1.29.conf") }
  }
  cri {
    containerd { include required("cri/containerd.conf") }
  }
  cni {
    cilium = { include required("cni/cilium.conf") }
  }
}

# Mandatory build configurations
Mandatory {
  description = ["- https://github.com/michaelvanstraten/alpine-for-k8s"]
  encrypted   = false

  scripts = [cleanup]
}

